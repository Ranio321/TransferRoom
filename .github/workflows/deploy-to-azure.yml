name: Deploy application to azure

on: workflow_dispatch

jobs:
  publish-server:
    name: Deploy server
    runs-on: ubuntu-latest

    env:
      AZURE_WEBAPP_NAME: transfer-room-service
      AZURE_WEBAPP_PACKAGE_PATH: "./publish"
      APPLICATION_PATH: "server/TransferRoom.Api/TransferRoom.Api.sln"
      DOTNET_VERSION: '8.x'

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Setup .NET ðŸ“¦
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{env.DOTNET_VERSION}}

    - name: Restore dependencies ðŸ“‚
      run: dotnet restore ${{env.APPLICATION_PATH}}

    - name: Build ðŸ§±
      run: dotnet build ${{env.APPLICATION_PATH}} --configuration Release --no-restore

    - name: Publish
      run: dotnet publish ${{env.APPLICATION_PATH}} --configuration Release --no-build --output '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}'

    - name: Deployment
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_API_PUBLISH_PROFILE }}
        package: "${{ env.AZURE_WEBAPP_PACKAGE_PATH }}"

  publish-client:
    name: Deploy web client
    runs-on: ubuntu-latest

    env:
      WORKING_DIRECTORY: client
      AZURE_WEBAPP_NAME: transfer-room-client
      NODE_VERSION: '18.x'
      VITE_API_URL: "https://transfer-room-service.azurewebsites.net"

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Node.js ðŸ“¦
      uses: actions/setup-node@v3
      with:
        node-version: ${{env.NODE_VERSION}}

    - name: Install dependencies ðŸ“‚
      run: npm install
      working-directory: ${{env.WORKING_DIRECTORY}}

    - name: Build ðŸ§±
      run: npm run build
      working-directory: ${{env.WORKING_DIRECTORY}}

    - name: Deployment
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_APP_PUBLISH_PROFILE }}
        package: "${{env.WORKING_DIRECTORY}}/dist"
